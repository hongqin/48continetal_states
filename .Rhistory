rm(list=ls())
debug = 1
library(igraph)
state_pairs= read.csv("48states.csv")
states = read.csv("state_year.csv")
newpairs = data.frame( t(apply(state_pairs, 1, sort)) ); #oder id1 and id2
cbind( newpairs, state_pairs)[1:10,]
state_pairs = newpairs
state_pairs$state1A = states$abbr[match( state_pairs$state1, states$state)]
state_pairs$state2A = states$abbr[match( state_pairs$state2, states$state)]
g = graph.data.frame(state_pairs[, 3:4], directed=F)
g.degree = degree(g)
g.degree [g.degree == max(g.degree)] #TN and MO have 8 bordering states
plot(g, vertex.color = "green")
summary(states$year)
table(states$year)
hist(states$year, br=20)
cutoff = c(1788, 1830, 1888)
cutoff[3]
year2bin = function( inYear ){
bin = 0;
if ( inYear <= cutoff[1]) {    bin = 1;  }
else if (inYear <= cutoff[2] ) {    bin = 2;  }
else if (inYear <= cutoff[3])  {    bin = 3;  }
else {  bin = 4;  }
return(bin)
}
year2bin(1730)
year2bin(1790)
year2bin(1850)
year2bin(1980)
unlist(lapply(states[, c("year")],  year2bin))
states$bin = unlist(lapply(states[, c("year")],  year2bin))
state_pairs$state1bin = states$bin[match( state_pairs$state1, states$state)]
state_pairs$state2bin = states$bin[match( state_pairs$state2, states$state)]
tags = t(apply(state_pairs[,c("state1bin", "state2bin")], 1, sort))
state_pairs$tag = paste( tags[,1], tags[,2], sep='_')
F.obs = data.frame( table(state_pairs$tag))
names(F.obs) = c("tag", "freq")
F.obs
ms02files = list.files(path='48statesMS02')
F.ms02 = data.frame(matrix(data=NA, nrow=1, ncol=3))
names(F.ms02) = c('tag', 'freq', 'file')
for (file in ms02files ){
if ( debug > 0 ) { print(file) }
ms02_pairs= read.csv(paste("48statesMS02/", file, sep=''))
ms02_pairs = ms02_pairs[,1:2]
ms02_pairs$state1bin = states$bin[match( ms02_pairs$id1, states$state)]
ms02_pairs$state2bin = states$bin[match( ms02_pairs$id2, states$state)]
tags2 = t(apply(ms02_pairs[,c("state1bin", "state2bin")], 1, sort))
ms02_pairs$tag = paste( tags2[,1], tags2[,2], sep='_')
F.ms02current = data.frame( table(ms02_pairs$tag))
F.ms02current$file = file
names(F.ms02current) = c('tag', 'freq', 'file')
F.ms02 =  data.frame( rbind(F.ms02, data.frame(F.ms02current)) )
}
F.ms02 = F.ms02[ !is.na(F.ms02$tag), ]
unique_tags = unique( c(as.character(F.obs$tag), as.character(F.ms02$tag)))
Zs = data.frame(unique_tags)
names(Zs) = c('tag')
Zs$freq = F.obs$freq[ match( Zs$tag , F.obs$tag) ]
Zs$freq[is.na(Zs$freq)] = 0;
for (i in 1 : length(Zs$tag)) {
#i = 2
sub = F.ms02[ F.ms02$tag == Zs$tag[i], ]
if(debug>0 ){
print( paste( Zs$tag[i], "mean:", mean(sub$freq), "sd:", sd(sub$freq) ))
}
Zs$Z[i] = ( Zs$freq[i] - mean(sub$freq) )/ sd(sub$freq)
}
tmp = as.vector(unlist(strsplit(as.character(Zs$tag), split="_")))
tmp2 = data.frame( matrix( tmp, nrow=10, ncol=2, byrow = T) )
names(tmp2) = c('c1', 'c2')
Zs = cbind( Zs, tmp2)
#unique categories
cats = sort( unique( c(as.character(Zs$c1), as.character(Zs$c2))))
Zmat = matrix(NA, ncol=length(cats), nrow=length(cats))
names(Zmat) = cats;
rownames(Zmat) = cats;
for (i in 1:length(cats)){#row
for (  j in 1:length(cats)) { #column
tmp = sort(c(i, j))
mytag = paste(tmp[1], tmp[2], sep="_")
print (mytag)
Zmat[i,j] = Zs$Z[ Zs$tag == mytag ]
}
}
library(Heatplus)
heatmap_2(Zmat,scale="none", legend=1, do.dendro=c(F,F), col=RGBColVec(64));
library(Heatplus)
par(mar=c(1,1,1,1))
heatmap_2(Zmat,scale="none", legend=1, do.dendro=c(F,F), col=RGBColVec(64));
graphics.off()
graphics.off()
par(mar=c(1,1,1,1))
rm(list=ls())
debug = 1
library(igraph)
state_pairs= read.csv("48states.csv")
states = read.csv("state_year.csv")
newpairs = data.frame( t(apply(state_pairs, 1, sort)) ); #oder id1 and id2
cbind( newpairs, state_pairs)[1:10,]
state_pairs = newpairs
state_pairs$state1A = states$abbr[match( state_pairs$state1, states$state)]
state_pairs$state2A = states$abbr[match( state_pairs$state2, states$state)]
g = graph.data.frame(state_pairs[, 3:4], directed=F)
g.degree = degree(g)
g.degree [g.degree == max(g.degree)] #TN and MO have 8 bordering states
plot(g, vertex.color = "green")
summary(states$year)
table(states$year)
hist(states$year, br=20)
cutoff = c(1788, 1830, 1888)
cutoff[3]
year2bin = function( inYear ){
bin = 0;
if ( inYear <= cutoff[1]) {    bin = 1;  }
else if (inYear <= cutoff[2] ) {    bin = 2;  }
else if (inYear <= cutoff[3])  {    bin = 3;  }
else {  bin = 4;  }
return(bin)
}
year2bin(1730)
year2bin(1790)
year2bin(1850)
year2bin(1980)
unlist(lapply(states[, c("year")],  year2bin))
states$bin = unlist(lapply(states[, c("year")],  year2bin))
state_pairs$state1bin = states$bin[match( state_pairs$state1, states$state)]
state_pairs$state2bin = states$bin[match( state_pairs$state2, states$state)]
tags = t(apply(state_pairs[,c("state1bin", "state2bin")], 1, sort))
state_pairs$tag = paste( tags[,1], tags[,2], sep='_')
F.obs = data.frame( table(state_pairs$tag))
names(F.obs) = c("tag", "freq")
F.obs
ms02files = list.files(path='48statesMS02')
F.ms02 = data.frame(matrix(data=NA, nrow=1, ncol=3))
names(F.ms02) = c('tag', 'freq', 'file')
for (file in ms02files ){
if ( debug > 0 ) { print(file) }
ms02_pairs= read.csv(paste("48statesMS02/", file, sep=''))
ms02_pairs = ms02_pairs[,1:2]
ms02_pairs$state1bin = states$bin[match( ms02_pairs$id1, states$state)]
ms02_pairs$state2bin = states$bin[match( ms02_pairs$id2, states$state)]
tags2 = t(apply(ms02_pairs[,c("state1bin", "state2bin")], 1, sort))
ms02_pairs$tag = paste( tags2[,1], tags2[,2], sep='_')
F.ms02current = data.frame( table(ms02_pairs$tag))
F.ms02current$file = file
names(F.ms02current) = c('tag', 'freq', 'file')
F.ms02 =  data.frame( rbind(F.ms02, data.frame(F.ms02current)) )
}
F.ms02 = F.ms02[ !is.na(F.ms02$tag), ]
unique_tags = unique( c(as.character(F.obs$tag), as.character(F.ms02$tag)))
Zs = data.frame(unique_tags)
names(Zs) = c('tag')
Zs$freq = F.obs$freq[ match( Zs$tag , F.obs$tag) ]
Zs$freq[is.na(Zs$freq)] = 0;
for (i in 1 : length(Zs$tag)) {
#i = 2
sub = F.ms02[ F.ms02$tag == Zs$tag[i], ]
if(debug>0 ){
print( paste( Zs$tag[i], "mean:", mean(sub$freq), "sd:", sd(sub$freq) ))
}
Zs$Z[i] = ( Zs$freq[i] - mean(sub$freq) )/ sd(sub$freq)
}
tmp = as.vector(unlist(strsplit(as.character(Zs$tag), split="_")))
tmp2 = data.frame( matrix( tmp, nrow=10, ncol=2, byrow = T) )
names(tmp2) = c('c1', 'c2')
Zs = cbind( Zs, tmp2)
#unique categories
cats = sort( unique( c(as.character(Zs$c1), as.character(Zs$c2))))
Zmat = matrix(NA, ncol=length(cats), nrow=length(cats))
names(Zmat) = cats;
rownames(Zmat) = cats;
for (i in 1:length(cats)){#row
for (  j in 1:length(cats)) { #column
tmp = sort(c(i, j))
mytag = paste(tmp[1], tmp[2], sep="_")
print (mytag)
Zmat[i,j] = Zs$Z[ Zs$tag == mytag ]
}
}
library(Heatplus)
graphics.off()
par(mar=c(1,1,1,1))
heatmap_2(Zmat,scale="none", legend=1, do.dendro=c(F,F), col=RGBColVec(64));
#heatmap_2(Zmat, legend=1, legfrac=10)
library(Heatplus)
par(mar=c(0,0,0,0))
heatmap_2(Zmat,scale="none", legend=1, do.dendro=c(F,F), col=RGBColVec(64));
library(Heatplus)
par(mar=c(0,0,0,0))
heatmap_2(Zmat,scale="none", legend=1, do.dendro=c(F,F), col=RGBColVec(64));
View(Zmat)
Zmat
#unique categories
cats = sort( unique( c(as.character(Zs$c1), as.character(Zs$c2))))
Zmat = data.frame(matrix(NA, ncol=length(cats), nrow=length(cats)))
names(Zmat) = cats;
rownames(Zmat) = cats;
for (i in 1:length(cats)){#row
for (  j in 1:length(cats)) { #column
tmp = sort(c(i, j))
mytag = paste(tmp[1], tmp[2], sep="_")
print (mytag)
Zmat[i,j] = Zs$Z[ Zs$tag == mytag ]
}
}
Zmat
str(Zmat)
library(Heatplus)
par(mar=c(0,0,0,0))
heatmap_2(Zmat,scale="none", legend=1, do.dendro=c(F,F), col=RGBColVec(64));
#unique categories
cats = sort( unique( c(as.character(Zs$c1), as.character(Zs$c2))))
Zmat = data.frame(matrix(NA, ncol=length(cats), nrow=length(cats)))
names(Zmat) = cats;
rownames(Zmat) = cats;
for (i in 1:length(cats)){#row
for (  j in 1:length(cats)) { #column
tmp = sort(c(i, j))
mytag = paste(tmp[1], tmp[2], sep="_")
print (mytag)
Zmat[i,j] = Zs$Z[ Zs$tag == mytag ]
}
}
library(Heatplus)
par(mar=c(0,0,0,0))
heatmap_2(as.matrix(Zmat),scale="none", legend=1, do.dendro=c(F,F), col=RGBColVec(64));
Zmat
library(Heatplus)
par(mar=c(0,0,0,0))
heatmap_2(as.matrix(Zmat),scale="none", Rowv=FALSE, Colv = FALSE, legend=1, do.dendro=c(F,F), col=RGBColVec(64));
library(Heatplus)
par(mar=c(0,0,0,0))
heatmap_2(as.matrix(Zmat),scale="none", Rowv=FALSE, Colv = FALSE, legend=1, do.dendro=c(F,F), col=RGBColVec(64));
heatmap_2(as.matrix(Zmat),scale="none", Rowv=FALSE, Colv = FALSE, legend=1, do.dendro=c(F,F), col=RGBColVec(64));
Zmat
rm(list=ls())
debug = 1
library(igraph)
state_pairs= read.csv("48states.csv")
states = read.csv("state_year.csv")
newpairs = data.frame( t(apply(state_pairs, 1, sort)) ); #oder id1 and id2
cbind( newpairs, state_pairs)[1:10,]
state_pairs = newpairs
state_pairs$state1A = states$abbr[match( state_pairs$state1, states$state)]
state_pairs$state2A = states$abbr[match( state_pairs$state2, states$state)]
g = graph.data.frame(state_pairs[, 3:4], directed=F)
g.degree = degree(g)
g.degree [g.degree == max(g.degree)] #TN and MO have 8 bordering states
plot(g, vertex.color = "green")
summary(states$year)
table(states$year)
hist(states$year, br=20)
cutoff = c(1788, 1830, 1888)
cutoff[3]
year2bin = function( inYear ){
bin = 0;
if ( inYear <= cutoff[1]) {    bin = 1;  }
else if (inYear <= cutoff[2] ) {    bin = 2;  }
else if (inYear <= cutoff[3])  {    bin = 3;  }
else {  bin = 4;  }
return(bin)
}
year2bin(1730)
year2bin(1790)
year2bin(1850)
year2bin(1980)
unlist(lapply(states[, c("year")],  year2bin))
states$bin = unlist(lapply(states[, c("year")],  year2bin))
state_pairs$state1bin = states$bin[match( state_pairs$state1, states$state)]
state_pairs$state2bin = states$bin[match( state_pairs$state2, states$state)]
tags = t(apply(state_pairs[,c("state1bin", "state2bin")], 1, sort))
state_pairs$tag = paste( tags[,1], tags[,2], sep='_')
F.obs = data.frame( table(state_pairs$tag))
names(F.obs) = c("tag", "freq")
F.obs
ms02files = list.files(path='48statesMS02')
F.ms02 = data.frame(matrix(data=NA, nrow=1, ncol=3))
names(F.ms02) = c('tag', 'freq', 'file')
for (file in ms02files ){
if ( debug > 0 ) { print(file) }
ms02_pairs= read.csv(paste("48statesMS02/", file, sep=''))
ms02_pairs = ms02_pairs[,1:2]
ms02_pairs$state1bin = states$bin[match( ms02_pairs$id1, states$state)]
ms02_pairs$state2bin = states$bin[match( ms02_pairs$id2, states$state)]
tags2 = t(apply(ms02_pairs[,c("state1bin", "state2bin")], 1, sort))
ms02_pairs$tag = paste( tags2[,1], tags2[,2], sep='_')
F.ms02current = data.frame( table(ms02_pairs$tag))
F.ms02current$file = file
names(F.ms02current) = c('tag', 'freq', 'file')
F.ms02 =  data.frame( rbind(F.ms02, data.frame(F.ms02current)) )
}
F.ms02 = F.ms02[ !is.na(F.ms02$tag), ]
unique_tags = unique( c(as.character(F.obs$tag), as.character(F.ms02$tag)))
Zs = data.frame(unique_tags)
names(Zs) = c('tag')
Zs$freq = F.obs$freq[ match( Zs$tag , F.obs$tag) ]
Zs$freq[is.na(Zs$freq)] = 0;
for (i in 1 : length(Zs$tag)) {
#i = 2
sub = F.ms02[ F.ms02$tag == Zs$tag[i], ]
if(debug>0 ){
print( paste( Zs$tag[i], "mean:", mean(sub$freq), "sd:", sd(sub$freq) ))
}
Zs$Z[i] = ( Zs$freq[i] - mean(sub$freq) )/ sd(sub$freq)
}
tmp = as.vector(unlist(strsplit(as.character(Zs$tag), split="_")))
tmp2 = data.frame( matrix( tmp, nrow=10, ncol=2, byrow = T) )
names(tmp2) = c('c1', 'c2')
Zs = cbind( Zs, tmp2)
#unique categories
cats = sort( unique( c(as.character(Zs$c1), as.character(Zs$c2))))
Zmat = data.frame(matrix(NA, ncol=length(cats), nrow=length(cats)))
names(Zmat) = cats;
rownames(Zmat) = cats;
for (i in 1:length(cats)){#row
for (  j in 1:length(cats)) { #column
tmp = sort(c(i, j))
mytag = paste(tmp[1], tmp[2], sep="_")
print (mytag)
Zmat[i,j] = Zs$Z[ Zs$tag == mytag ]
}
}
library(Heatplus)
par(mar=c(0,0,0,0))
heatmap_2(as.matrix(Zmat),scale="none", Rowv=FALSE, Colv = FALSE, legend=1, do.dendro=c(F,F), col=RGBColVec(64));
rm(list=ls())
debug = 1
library(Heatplus)
library(igraph)
state_pairs= read.csv("48states.csv")
states = read.csv("state_year.csv")
newpairs = data.frame( t(apply(state_pairs, 1, sort)) ); #oder id1 and id2
cbind( newpairs, state_pairs)[1:10,]
state_pairs = newpairs
state_pairs$state1A = states$abbr[match( state_pairs$state1, states$state)]
state_pairs$state2A = states$abbr[match( state_pairs$state2, states$state)]
g = graph.data.frame(state_pairs[, 3:4], directed=F)
g.degree = degree(g)
g.degree [g.degree == max(g.degree)] #TN and MO have 8 bordering states
plot(g, vertex.color = "green")
summary(states$year)
table(states$year)
hist(states$year, br=20)
cutoff = c(1788, 1830, 1888)
cutoff[3]
year2bin = function( inYear ){
bin = 0;
if ( inYear <= cutoff[1]) {    bin = 1;  }
else if (inYear <= cutoff[2] ) {    bin = 2;  }
else if (inYear <= cutoff[3])  {    bin = 3;  }
else {  bin = 4;  }
return(bin)
}
year2bin(1730)
year2bin(1790)
year2bin(1850)
year2bin(1980)
unlist(lapply(states[, c("year")],  year2bin))
states$bin = unlist(lapply(states[, c("year")],  year2bin))
state_pairs$state1bin = states$bin[match( state_pairs$state1, states$state)]
state_pairs$state2bin = states$bin[match( state_pairs$state2, states$state)]
tags = t(apply(state_pairs[,c("state1bin", "state2bin")], 1, sort))
state_pairs$tag = paste( tags[,1], tags[,2], sep='_')
F.obs = data.frame( table(state_pairs$tag))
names(F.obs) = c("tag", "freq")
F.obs
ms02files = list.files(path='48statesMS02')
F.ms02 = data.frame(matrix(data=NA, nrow=1, ncol=3))
names(F.ms02) = c('tag', 'freq', 'file')
for (file in ms02files ){
if ( debug > 0 ) { print(file) }
ms02_pairs= read.csv(paste("48statesMS02/", file, sep=''))
ms02_pairs = ms02_pairs[,1:2]
ms02_pairs$state1bin = states$bin[match( ms02_pairs$id1, states$state)]
ms02_pairs$state2bin = states$bin[match( ms02_pairs$id2, states$state)]
tags2 = t(apply(ms02_pairs[,c("state1bin", "state2bin")], 1, sort))
ms02_pairs$tag = paste( tags2[,1], tags2[,2], sep='_')
F.ms02current = data.frame( table(ms02_pairs$tag))
F.ms02current$file = file
names(F.ms02current) = c('tag', 'freq', 'file')
F.ms02 =  data.frame( rbind(F.ms02, data.frame(F.ms02current)) )
}
F.ms02 = F.ms02[ !is.na(F.ms02$tag), ]
unique_tags = unique( c(as.character(F.obs$tag), as.character(F.ms02$tag)))
Zs = data.frame(unique_tags)
names(Zs) = c('tag')
Zs$freq = F.obs$freq[ match( Zs$tag , F.obs$tag) ]
Zs$freq[is.na(Zs$freq)] = 0;
for (i in 1 : length(Zs$tag)) {
#i = 2
sub = F.ms02[ F.ms02$tag == Zs$tag[i], ]
if(debug>0 ){
print( paste( Zs$tag[i], "mean:", mean(sub$freq), "sd:", sd(sub$freq) ))
}
Zs$Z[i] = ( Zs$freq[i] - mean(sub$freq) )/ sd(sub$freq)
}
tmp = as.vector(unlist(strsplit(as.character(Zs$tag), split="_")))
tmp2 = data.frame( matrix( tmp, nrow=10, ncol=2, byrow = T) )
names(tmp2) = c('c1', 'c2')
Zs = cbind( Zs, tmp2)
#unique categories
cats = sort( unique( c(as.character(Zs$c1), as.character(Zs$c2))))
Zmat = data.frame(matrix(NA, ncol=length(cats), nrow=length(cats)))
names(Zmat) = cats;
rownames(Zmat) = cats;
for (i in 1:length(cats)){#row
for (  j in 1:length(cats)) { #column
tmp = sort(c(i, j))
mytag = paste(tmp[1], tmp[2], sep="_")
print (mytag)
Zmat[i,j] = Zs$Z[ Zs$tag == mytag ]
}
}
par(mar=c(0,0,0,0))
heatmap_2(as.matrix(Zmat),scale="none", Rowv=FALSE, Colv = FALSE, legend=1, do.dendro=c(F,F), col=RGBColVec(64));
Zmat
plot(Zmat)
par(mar=c(0,0,0,0))
heatmap_2(as.matrix(Zmat),scale="none", Rowv=FALSE, Colv =NA, legend=1, do.dendro=c(F,F), col=RGBColVec(64));
par(mar=c(0,0,0,0))
heatmap_2(as.matrix(Zmat),scale="none", Rowv=NA, Colv =NA, legend=1, do.dendro=c(F,F), col=RGBColVec(64));
